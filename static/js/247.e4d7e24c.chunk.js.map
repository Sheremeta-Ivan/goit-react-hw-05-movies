{"version":3,"file":"static/js/247.e4d7e24c.chunk.js","mappings":"kOAkDA,UA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAeP,GAFxB,OAERQ,EAFQ,OAGdJ,EAAQI,GACRC,QAAQC,IAAIF,GAJE,gDAMdC,QAAQE,MAAR,MANc,yDAAH,qDASfL,GACD,GAAE,CAACN,KAEF,2BACmB,IAAhBG,EAAKS,SACJ,4BACE,wBAAI,gBACJ,wBACGT,EAAKU,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,MAAM,QACNC,OAAO,QACPC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cAD5C,UAEOC,GAETC,IAAKN,EAAMO,iBAEb,uBAAIP,EAAMQ,SAXHR,EAAMS,GADF,SAkBJ,IAAhBpB,EAAKS,SAAgB,uBAAG,6CAG9B,C,+LC9CDY,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzBA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BjB,EAD2B,yBAE1BA,EAASqB,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAM/B,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,iBAAoBxB,GAAWyB,GADvB,cACzBjB,EADyB,yBAExBA,EAASqB,MAFe,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,8BAAiCS,GAAaR,GAD3C,cACpBjB,EADoB,yBAEnBA,EAASqB,KAAKC,SAFK,2CAAH,sDAKZvB,EAAc,mCAAG,WAAMP,GAAN,uFACLwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,aAAuCyB,GADlC,cACtBjB,EADsB,yBAErBA,EAASqB,KAAK1B,MAFO,2CAAH,sDAKd+B,EAAiB,mCAAG,WAAMlC,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,aAAuCyB,GAD/B,cACzBjB,EADyB,yBAExBA,EAASqB,KAAKC,SAFU,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/TmdbAPI.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'services/TmdbAPI';\nimport noimage from '../images/placeholder.png';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n        console.log(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n  return (\n    <div>\n      {cast.length !== 0 && (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul>\n            {cast.map(actor => (\n              <li key={actor.id}>\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${noimage}`\n                  }\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {cast.length === 0 && <p>We don't have any cast for this movie.</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1527ea54837c90bfc98da5bb8785a014';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","movieCast","fetchMovieCast","response","console","log","error","length","map","actor","width","height","src","profile_path","noimage","alt","original_name","name","id","axios","params","api_key","language","fetchTrendingMovies","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieReviews"],"sourceRoot":""}