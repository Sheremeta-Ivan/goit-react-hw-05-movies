{"version":3,"file":"static/js/247.928160ed.chunk.js","mappings":"0OA8DA,UAzDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAeP,GAFxB,OAERQ,EAFQ,OAGdJ,EAAQI,GAHM,gDAKdC,QAAQC,MAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACN,KAGF,2BACmB,IAAhBG,EAAKQ,SACJ,4BACE,eAAIC,UAAU,gEAAd,SAA8E,gBAG9E,eAAIA,UAAU,oHAAd,SACGT,EAAKU,KAAI,SAAAC,GAAK,OACb,gBAEEF,UAAU,+EAFZ,WAIE,gBACEG,MAAM,QACNC,OAAO,QACPC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cAD5C,UAEOC,GAETC,IAAKN,EAAMO,cACXT,UAAU,uBAEZ,cAAGA,UAAU,2EAAb,SACGE,EAAMQ,SAfJR,EAAMS,GAFA,SAwBJ,IAAhBpB,EAAKQ,SACJ,cAAGC,UAAU,oEAAb,SAAiF,+CAMxF,C,2NC1DDY,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzBA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAAS,CACbD,KAAAA,GAF+B,SAIVJ,EAAAA,EAAAA,IAAA,qBAAgC,CAAEK,OAAAA,IAJxB,cAI3BrB,EAJ2B,yBAK1BA,EAASsB,MALiB,2CAAH,sDAQnBC,EAAe,mCAAG,WAAM/B,GAAN,uFACNwB,EAAAA,EAAAA,IAAA,iBAAoBxB,EAApB,aADM,cACvBQ,EADuB,yBAEtBA,EAASsB,KAAKE,SAFQ,2CAAH,sDAKfC,EAAiB,mCAAG,WAAMjC,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,iBAAoBxB,IADZ,cACzBQ,EADyB,yBAExBA,EAASsB,MAFe,2CAAH,sDAKjBI,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,8BAAiCW,IAD9B,cACpB3B,EADoB,yBAEnBA,EAASsB,KAAKE,SAFK,2CAAH,sDAKZzB,EAAc,mCAAG,WAAMP,GAAN,uFACLwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,cADK,cACtBQ,EADsB,yBAErBA,EAASsB,KAAK3B,MAFO,2CAAH,sDAKdiC,EAAiB,mCAAG,WAAMpC,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,cADQ,cACzBQ,EADyB,yBAExBA,EAASsB,KAAKE,SAFU,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/TmdbAPI.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'services/TmdbAPI';\nimport noimage from '../images/placeholder.png';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length !== 0 && (\n        <div>\n          <h2 className=\"my-4 text-4xl font-bold tracking-tight text-center text-white\">\n            Movie Cast\n          </h2>\n          <ul className=\"container mx-auto my-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3  lg:grid-cols-4 xl:grid-cols-6  gap-8  px-6\">\n            {cast.map(actor => (\n              <li\n                key={actor.id}\n                className=\"max-w-xs mx-auto bg-card border-card  rounded-lg ease-in duration-300 shadow\"\n              >\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${noimage}`\n                  }\n                  alt={actor.original_name}\n                  className=\"rounded-t-lg grow\"\n                />\n                <p className=\" text-m font-medium tracking-tight text-white text-center truncate  px-2\">\n                  {actor.name}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {cast.length === 0 && (\n        <p className=\"my-4 text-2xl font-semibold tracking-tight text-white text-center\">\n          We don't have any cast for this movie :(\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1527ea54837c90bfc98da5bb8785a014';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async page => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const fetchVideoMovie = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos?`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","movieCast","fetchMovieCast","response","console","error","length","className","map","actor","width","height","src","profile_path","noimage","alt","original_name","name","id","axios","api_key","language","fetchTrendingMovies","page","params","data","fetchVideoMovie","results","fetchMovieDetails","handleSearch","movieName","fetchMovieReviews"],"sourceRoot":""}