{"version":3,"file":"static/js/186.65ca93d9.chunk.js","mappings":"+NAiDA,UA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBP,GAFxB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,KAEF,2BACsB,IAAnBG,EAAQQ,SACP,4BACE,eAAIC,UAAU,gEAAd,SAA8E,mBAG9E,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,cAAGF,UAAU,uEAAb,SACGE,EAAOC,UAEV,cAAGH,UAAU,8DAAb,SACGE,EAAOE,YALHF,EAAOG,GADC,SAaL,IAAnBd,EAAQQ,SACP,cAAGC,UAAU,oEAAb,SAAiF,kDAMxF,C,2NC7CDM,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzBA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BC,EAAS,CACbD,KAAAA,GAF+B,SAIVJ,EAAAA,EAAAA,IAAA,qBAAgC,CAAEK,OAAAA,IAJxB,cAI3Bf,EAJ2B,yBAK1BA,EAASgB,MALiB,2CAAH,sDAQnBC,EAAe,mCAAG,WAAMzB,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aADM,cACvBQ,EADuB,yBAEtBA,EAASgB,KAAKE,SAFQ,2CAAH,sDAKfC,EAAiB,mCAAG,WAAM3B,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,IADZ,cACzBQ,EADyB,yBAExBA,EAASgB,MAFe,2CAAH,sDAKjBI,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,8BAAiCW,IAD9B,cACpBrB,EADoB,yBAEnBA,EAASgB,KAAKE,SAFK,2CAAH,sDAKZI,EAAc,mCAAG,WAAM9B,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,cADK,cACtBQ,EADsB,yBAErBA,EAASgB,KAAKO,MAFO,2CAAH,sDAKdxB,EAAiB,mCAAG,WAAMP,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,cADQ,cACzBQ,EADyB,yBAExBA,EAASgB,KAAKE,SAFU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/TmdbAPI.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/TmdbAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n  return (\n    <div>\n      {reviews.length !== 0 && (\n        <div>\n          <h2 className=\"my-4 text-4xl font-bold tracking-tight text-center text-white\">\n            Movie Reviews\n          </h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-left text-white\">\n                  {review.author}\n                </p>\n                <p className=\"mb-3 mt-3 text-l font-normal tracking-tight text-slate-500 \">\n                  {review.content}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <p className=\"my-4 text-2xl font-semibold tracking-tight text-white text-center\">\n          We don't have any reviews for this movie :(\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1527ea54837c90bfc98da5bb8785a014';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async page => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const fetchVideoMovie = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos?`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","movieReviews","fetchMovieReviews","response","console","log","length","className","map","review","author","content","id","axios","api_key","language","fetchTrendingMovies","page","params","data","fetchVideoMovie","results","fetchMovieDetails","handleSearch","movieName","fetchMovieCast","cast"],"sourceRoot":""}