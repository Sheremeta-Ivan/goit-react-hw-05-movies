{"version":3,"file":"static/js/534.51cc3209.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/YoutubeTrailer/YoutubeTrailer.jsx","pages/MoviesDetails/MoviesDetails.jsx","services/TmdbAPI.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst Button = ({ text }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\" text-white bg-card hover:bg-header-color  font-bold rounded-lg text-l px-5 py-2.5 my-6 \"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst YouTubeVideo = ({ videoId }) => {\n  const opts = {\n    height: '300',\n    width: '360',\n  };\n\n  return <YouTube videoId={videoId} opts={opts} />;\n};\n\nexport default YouTubeVideo;\n","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/TmdbAPI';\nimport { fetchVideoMovie } from 'services/TmdbAPI';\nimport Loader from 'components/Loader/Loader';\nimport Button from 'components/Button/Button';\nimport noimage from 'components/images/placeholder.png';\nimport { AiFillStar } from 'react-icons/ai';\nimport YoutubeTrailer from 'components/YoutubeTrailer/YoutubeTrailer';\n\nconst MoviesDetails = () => {\n  //hooks\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const [video, setVideo] = useState('');\n\n  //get data from api about film details\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const movieVideo = async () => {\n      try {\n        const results = await fetchVideoMovie(movieId);\n        const trailer = results.find(\n          ({ site, type }) => site === 'YouTube' && type === 'Trailer'\n        );\n        setVideo(trailer ? trailer.key : '');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieVideo();\n    movieDetails();\n  }, [movieId]);\n\n  //share loader when movieDetail null\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  //get info about production companies current film\n  const productionCompanies = movieDetails.production_companies;\n\n  const productionCompaniesList = productionCompanies.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n  const movieRating = movieDetails.vote_average;\n  const releaseDate = movieDetails.release_date;\n\n  return (\n    <div className=\"container ml-auto mr-auto pl-6 pr-6\">\n      <Link\n        to={backLinkHref.current}\n        className=\"block text-white bg-card hover:bg-header-color  font-bold rounded-lg text-l px-5 py-2.5 my-6 w-[140px]\"\n      >\n        ⬅️ Go back\n      </Link>\n      <div backdrop={movieDetails.backdrop_path}>\n        <div className=\"flex gap-8 flex-col-reverse md:flex-row mb-10\">\n          <div className=\"grow \">\n            <h1 className=\"mb-3 mt-3 text-4xl font-bold tracking-tight text-right text-white\">\n              {movieDetails.title}\n            </h1>\n            <h3 className=\"mb-3 mt-3 text-2xl font-semibold tracking-tight text-right text-slate-500\">\n              Released: <span className=\"text-gray-300\">{releaseDate}</span>\n            </h3>\n            <h3 className=\"mb-3 mt-3 text-2xl font-semibold tracking-tight text-right text-slate-500\">\n              User score:\n            </h3>\n            <div className=\"flex flex-row justify-end items-center text-right text-gray-300\">\n              <AiFillStar className=\"text-3xl mr-2\" />\n              <p className=\"text-2xl font-bold\">{movieRating.toFixed(1)}</p>\n            </div>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-left text-white\">\n              Overview:\n            </h2>\n            <p className=\"mb-3 mt-3 text-l font-normal tracking-tight text-slate-500 max-w-[500px]\">\n              {movieDetails.overview}\n            </p>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-left text-white\">\n              Genres:\n            </h2>\n            <p className=\"flex gap-5 mb-3 mt-3 text-l font-normal tracking-tight text-slate-500 max-w-[500px]\">\n              {movieDetails.genres.map(genre => (\n                <span key={genre.id}> #{genre.name}</span>\n              ))}\n            </p>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-center text-white\">\n              Production companies\n            </h2>\n            <ul className=\"flex gap-3 flex-nowrap\">\n              {productionCompaniesList}\n            </ul>\n            <h2 className=\"my-5 text-2xl font-semibold tracking-tight text-center text-slate-500\">\n              Trailer\n            </h2>\n            <div className=\"flex justify-center my-5\">\n              <YoutubeTrailer videoId={video} />\n            </div>\n          </div>\n\n          <div className=\"text-center md:my-[100px]\">\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                  : `${noimage}`\n              }\n              alt={movieDetails.title}\n              className=\"rounded-2xl\"\n            />\n            <a\n              href={movieDetails.homepage}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              className=\" block text-white bg-card hover:bg-header-color focus:ring-4 font-semibold rounded-lg text-l px-5 py-2.5 my-5 focus:outline-none\"\n            >\n              Link to film\n            </a>\n          </div>\n        </div>\n        <hr className=\"w-48 h-1 mx-auto my-2 bg-active-link border-0 rounded md:my-4 \" />\n        <div className=\"text-center\">\n          <h3 className=\"mb-3 mt-3 text-4xl font-bold tracking-tight text-center text-white\">\n            Additional information\n          </h3>\n          <Link to=\"cast\" className=\"mr-[20px]\">\n            <Button text=\"Cast\" />\n          </Link>\n          <Link to=\"reviews\">\n            <Button text=\"Reviews\" />\n          </Link>\n        </div>\n        <hr className=\"w-48 h-1 mx-auto my-2 bg-active-link border-0 rounded md:my-4 \" />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1527ea54837c90bfc98da5bb8785a014';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async (page, { signal }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`trending/movie/day`, { params, signal });\n  return response.data;\n};\n\nexport const fetchVideoMovie = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos?`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const handleSearch = async (movieName, { signal }) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, {\n    signal,\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["text","type","className","videoId","opts","height","width","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","video","setVideo","useEffect","fetchMovieDetails","movie","console","error","movieVideo","fetchVideoMovie","results","trailer","find","site","key","log","Loader","productionCompaniesList","production_companies","map","id","logo_path","name","src","alt","style","maxHeight","maxWidth","marginRight","marginTop","movieRating","vote_average","releaseDate","release_date","to","current","backdrop","backdrop_path","title","toFixed","overview","genres","genre","YoutubeTrailer","poster_path","noimage","href","homepage","rel","target","Suspense","fallback","axios","api_key","language","fetchTrendingMovies","page","signal","params","response","data","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}