{"version":3,"file":"static/js/568.9b87905c.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","pages/MoviesDetails/MoviesDetails.jsx","services/TmdbAPI.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst Button = ({ text }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"text-white bg-card hover:bg-header-color  font-bold rounded-lg text-l px-5 py-2.5 my-6 \"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/TmdbAPI';\nimport Loader from 'components/Loader/Loader';\nimport Button from 'components/Button/Button';\nimport noimage from 'components/images/placeholder.png';\nimport { AiFillStar } from 'react-icons/ai';\n\nconst MoviesDetails = () => {\n  //hooks\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n  //get data from api about film details\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  //share loader when movieDetail null\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  //get info about production companies current film\n  const productionCompanies = movieDetails.production_companies;\n\n  const productionCompaniesList = productionCompanies.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n  const movieRating = movieDetails.vote_average;\n  const releaseDate = movieDetails.release_date;\n\n  return (\n    <div className=\"container ml-auto mr-auto pl-6 pr-6\">\n      <Link to={backLinkHref.current}>\n        <Button text=\"⬅️ Go back\" />\n      </Link>\n      <div backdrop={movieDetails.backdrop_path}>\n        <div className=\"flex gap-8 flex-col-reverse md:flex-row mb-10\">\n          <div className=\"grow \">\n            <h1 className=\"mb-3 mt-3 text-4xl font-bold tracking-tight text-right text-white\">\n              {movieDetails.title}\n            </h1>\n            <h3 className=\"mb-3 mt-3 text-2xl font-semibold tracking-tight text-right text-slate-500\">\n              Released: <span className=\"text-gray-300\">{releaseDate}</span>\n            </h3>\n            <h3 className=\"mb-3 mt-3 text-2xl font-semibold tracking-tight text-right text-slate-500\">\n              User score:\n            </h3>\n            <div className=\"flex flex-row justify-end items-center text-right text-gray-300\">\n              <AiFillStar className=\"text-3xl mr-2\" />\n              <p className=\"text-2xl font-bold\">{movieRating.toFixed(1)}</p>\n            </div>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-left text-white\">\n              Overview:\n            </h2>\n            <p className=\"mb-3 mt-3 text-l font-normal tracking-tight text-slate-500 max-w-[500px]\">\n              {movieDetails.overview}\n            </p>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-left text-white\">\n              Genres:\n            </h2>\n            <p className=\"flex gap-5 mb-3 mt-3 text-l font-normal tracking-tight text-slate-500 max-w-[500px]\">\n              {movieDetails.genres.map(genre => (\n                <span key={genre.id}> #{genre.name}</span>\n              ))}\n            </p>\n            <h2 className=\"mb-1 mt-3 text-2xl font-semibold tracking-tight text-center text-white\">\n              Production companies\n            </h2>\n            <ul className=\"flex gap-3 flex-nowrap\">\n              {productionCompaniesList}\n            </ul>\n          </div>\n\n          <div>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                  : `${noimage}`\n              }\n              alt={movieDetails.title}\n              className=\"rounded-2xl\"\n            />\n          </div>\n        </div>\n        <hr className=\"w-48 h-1 mx-auto my-2 bg-active-link border-0 rounded md:my-4 \" />\n        <div className=\"text-center\">\n          <h3 className=\"mb-3 mt-3 text-4xl font-bold tracking-tight text-center text-white\">\n            Additional information\n          </h3>\n          <Link to=\"cast\" className=\"mr-[20px]\">\n            <Button text=\"Cast\" />\n          </Link>\n          <Link to=\"reviews\">\n            <Button text=\"Reviews\" />\n          </Link>\n        </div>\n        <hr className=\"w-48 h-1 mx-auto my-2 bg-active-link border-0 rounded md:my-4 \" />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1527ea54837c90bfc98da5bb8785a014';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["text","type","className","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetails","movie","console","error","Loader","productionCompaniesList","production_companies","map","id","logo_path","name","src","alt","style","maxHeight","maxWidth","marginRight","marginTop","movieRating","vote_average","releaseDate","release_date","to","current","backdrop","backdrop_path","title","toFixed","overview","genres","genre","poster_path","noimage","Suspense","fallback","axios","params","api_key","language","fetchTrendingMovies","response","data","results","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}